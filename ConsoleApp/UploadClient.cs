namespace Assignment1ConsoleApp;
using System;
using System.IO;
using System.Net;

public class UploadClient
{

    public static async Task Main(string[] args)
    {
        string serverUrl = "http://localhost:8081/upload/upload";
        string imagePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "Documents", "test", "image.png");
        Console.WriteLine("Full Path: " + imagePath);
        System.IO.FileInfo image = new System.IO.FileInfo(imagePath);

        try
        {
            await PostFileAsync(serverUrl, "Orange Truck", "2023-10-30", image);
        }
        catch (FileUploadException e)
        {
            Console.WriteLine("Error. Exception: " + e.Message);
        }
    }

    public static async Task PostFileAsync(string serverUrl, string caption, string date, System.IO.FileInfo file)
    {
        try
        {
            if (!file.Exists)
            {
                throw new FileUploadException("File does not exist at the specified path.");
            }

            using (HttpClient client = new HttpClient())
            using (MultipartFormDataContent content = new MultipartFormDataContent())
            {
                // Add caption field
                content.Add(new StringContent(caption), "caption");

                // Add date field
                content.Add(new StringContent(date), "date");

                // Add file field
                content.Add(new StreamContent(new FileStream(file.FullName, FileMode.Open, FileAccess.Read)), "File", file.Name);

                // Make the request and get the response
                HttpResponseMessage response = await client.PostAsync(serverUrl, content);

                if (response.IsSuccessStatusCode)
                {
                    // Read the response content
                    string responseText = await response.Content.ReadAsStringAsync();
                    Console.WriteLine("Server Response: " + responseText);
                }
                else
                {
                    Console.WriteLine($"Error: {response.StatusCode}");
                    // Handle other error status codes or specific scenarios
                }
            }
        }
        catch (Exception e)
        {
            throw new FileUploadException("Failed to upload file: " + e.Message, e);
        }
    }



    private static int GetResponseCode(WebException e)
    {
        if (e.Response is HttpWebResponse response)
        {
            return (int)response.StatusCode;
        }
        return -1;
    }

    public string UploadFile()
    {
        // Implementation of the UploadFile method above
        // There was an error, so my IDE autogenerated this
        return "File uploaded successfully";
    }
}
